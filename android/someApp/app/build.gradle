apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.example.someapp"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}

jacoco {
    toolVersion = "0.7.1.201405082137"
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testReleaseUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco test coverage reports."
    reports {
        xml.enabled = false
        html.enabled = true
    }
    classDirectories = fileTree(
            dir: './build/intermediates/classes/release',
            excludes: [
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.class',
                    '**/com/example/someapp/MainActivity.class',
            ],
    )
    def coverageSourceDirs = [
            'src/main/java'
    ]
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testReleaseUnitTest.exec')
}
